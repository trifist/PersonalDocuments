折叠

zc      折叠
zC     对所在范围内所有嵌套的折叠点进行折叠
zo      展开折叠
zO     对所在范围内所有嵌套的折叠点展开
[z       到当前打开的折叠的开始处。
]z       到当前打开的折叠的末尾处。
zj       向下移动。到达下一个折叠的开始处。关闭的折叠也被计入。
zk      向上移动到前一折叠的结束处。关闭的折叠也被计入。


撤销

u   		撤销上一步的操作
ctrl + r   	恢复上一步被撤销的操作


查找
/	从上往下查找
?	从下往上查找
*	当前单词向下查找（全匹配）
g*	当前单词向下查找（部分匹配）
#	当前单词向上查找（全匹配）
g#	当前单词向上查找（部分匹配）
n	找下一个
N	找上一个

进阶1：让光标停留在单词的第一个字母上， 然后输入yw拷贝该单词， 然后输入 / (Ctrl + R) 0 （即 /”0），回车， 就查找到了第一个匹配的单词， 并且可以通过 n  或  N 进行上一个或下一个的匹配。
解释一下：
Ctrl + r 是指使用寄存器 ， 你会发现先输入/ ， 然后输入 Ctrl + r , 会立刻变为 “ ， 即寄存器的前缀， 然后 ”0 就可以理解了吧？ 合起来就是 /“0， 就是查找刚才复制的那个单词

进阶2： 还有一种方式， 和第二种方式差不多，不过是将单词拷贝到系统剪贴板， 然后再从系统剪贴板拿出来。 即选中需要查找的单词， 然后输入 “+y， 然后输入/（Shfit + Ctrl + v）， 就查找到了第一个匹配的单词， 并且可以通过 n  或  N 进行上一个或下一个的匹配。


替换

语法为 :[addr]s/源字符串/目的字符串/[option]

[addr] 表示检索范围，省略时表示当前行。
如：“1，20” ：表示从第1行到20行；
“%” ：表示整个文件，同“1,$”；
“. ,$” ：从当前行到文件尾；
s : 表示替换操作

[option] : 表示操作类型
如：g 表示全局替换; 
c 表示进行确认
p 表示替代结果逐行显示（Ctrl + L恢复屏幕）；
省略option时仅对每行第一个匹配串进行替换；
如果在源字符串和目的字符串中出现特殊字符，需要用”\”转义


